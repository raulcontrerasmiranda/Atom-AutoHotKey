name: "AutoHotKey"
scopeName: ".source.atom-ahk"
fileTypes: [
  "ahk"
]
patterns: [
  # Block comments
  {
    begin: "/\\*"
    end: "\\*/"
    name: ".ahk.comment.block"
  }
  # Line comments
  {
    match: "((?:[\\s])|^);.*"
    name: ".ahk.comment.line"
  }
  # Hotstrings
  {
    match: ":([*?CcOoRrTtXxZz]|[Zz]0|[Tt][0]|[Pp][0-9]+|[Rr]0|SI|SE|SP|[Bb]0|[Cc]0|[Cc]1|[Kk][0-9]+)*:(.*?)::(.*)"
    name: ".ahk.definition.hotkey"
    captures: {
      2: {
        name: ".ahk.definition.string.hotstring"
      }
      3: {
        name: ".ahk.definition.string.hotstring"
      }
    }
  }
  # Functions
  {
    match: "([A-Z]([a-zA-Z_])+)(?=\\()"
    name: ".ahk.definition.function"
  }
  # Directives
  {
    match: "^\\s*#[A-Z][\\w]+"
    name: ".ahk.definition.directive"
  }
  # Operators
  {
    match: "[-~&*+!.=,:?\\/<>|%]{1,2}|(?<=^|[^\\w])(and|AND|or|OR|new|NEW|not|NOT|ByRef)(?=$|[^\\w])"
    name: ".ahk.keyword.operator"
  }
  # Built-in variables
  {
    match: "(?<=^|[^\\w])(A_[A-Z]\\w+|[Cc]lipboard|ClipboardAll|ComSpec|ErrorLevel|ProgramFiles)(?=$|[^\\w])"
    name: ".ahk.definition.variable.built-in"
  }
  # Strings
  {
    match: "(\")([^\"]|[\"][\"])*(\")"
    name: ".ahk.definition.string"
    captures: {
      0: {
        patterns: [
          {
            include: "#string_escapes"
          }
        ]
      }
      1: {
        name: ".ahk.definition.string.start"
      }
      3: {
        name: ".ahk.definition.string.end"
      }
    }
    patterns: [
      {
        include: "#string_escapes"
      }
    ]
  }
  # Values
  {
    match: "(?<=^|[^\\w])(true|false|[0-9]+)(?=$|[^\\w])"
    name: ".ahk.definition.number"
  }
  # Declarations
  {
    match: "(?<=^|[^\\w])(global|extends|class|static)(?=$|[^\\w])"
    name: ".ahk.keyword.declaration"
  }
  # Control flow
  {
    match: "(?<=^|[^\\w])(if|while|else|Until|Loop|[Pp]arse|Files|[Rread]|Reg|return|switch|case|default|between|contains|in|is|Goto|Gosub|for|finally|try|catch|continue|break)(?=$|[^\\w])"
    name: ".ahk.keyword.control"
  }
  # Commands
  {
    match: "(?<=^|[^\\w])(AutoTrim|BlockInput|Click|ClipWait|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|Edit|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyHistory|KeyWait|ListHotkeys|ListLines|ListVars|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendLevel|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapsLockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumLockState|SetRegView|SetScrollLockState|SetStoreCapsLockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)(?=$|[^\\w])",
    name: ".ahk.default.command"
  }
  # Hotkeys
  {
    match: "([#^!+&<>*~$\\s\\w])+::"
    name: ".ahk.definition.hotkey"
  }
]
repository: {
  string_escapes: {
    patterns: [
      {
        match: "(`)([,%`;nrtvaf]|::)"
        name: ".ahk.definition.escape"
        captures: {
          1: {
            name: ".ahk.definition.escape.character"
          }
          2: {
            name: ".ahk.definition.escape.body"
          }
        }
      }
    ]
  }
}
