name: "AutoHotKey"
scopeName: ".source.atom-ahk"
fileTypes: [
  "ahk"
]
patterns: [
  # Block comments
  {
    begin: "/\\*"
    end: "\\*/"
    name: ".ahk.comment.block"
  }
  # Line comments
  {
    match: "((?:[\\s])|^);.*"
    name: ".ahk.comment.line"
  }
  # Functions
  {
    match: "([A-Z]([a-zA-Z_])+)(?=\\()"
    name: ".ahk.definition.function"
  }
  # Directives
  {
    match: "^\\s*#[A-Z][\\w]+"
    name: ".ahk.definition.directive"
  }
  # Operators
  {
    match: "[-~&*+!.=,:?\\/<>|%]{1,2}|(^|[^\\w])(and|AND|or|OR|new|NEW|not|NOT|ByRef)($|[^\\w])"
    name: ".ahk.keyword.operator"
  }
  # Built-in variables
  {
    match: "(^|[^\\w])(A_[A-Z]\\w+|[Cc]lipboard|ClipboardAll|ComSpec|ErrorLevel|ProgramFiles)($|[^\\w])"
    name: ".ahk.definition.variable.built-in"
  }
  # Strings
  {
    match: "(\")([^\"]|[\"][\"])*(\")"
    name: ".ahk.definition.string"
    captures: {
      0: {
        patterns: [
          {
            include: "#string_escapes"
          }
        ]
      }
      1: {
        name: ".ahk.definition.string.start"
      }
      3: {
        name: ".ahk.definition.string.end"
      }
    }
    patterns: [
      {
        include: "#string_escapes"
      }
    ]
  }
  # Values
  {
    match: "(?<=^|[^\\w])([Tt]rue|[Ff]alse|[0-9]+)(?=$|[^\\w])"
    name: ".ahk.definition.number"
  }
]
repository: {
  string_escapes: {
    patterns: [
      {
        match: "(`)([,%`;nrtvaf]|::)"
        name: ".ahk.definition.escape"
        captures: {
          1: {
            name: ".ahk.definition.escape.character"
          }
          2: {
            name: ".ahk.definition.escape.body"
          }
        }
      }
    ]
  }
}
